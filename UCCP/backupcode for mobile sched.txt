package com.example.uccps;

import androidx.appcompat.app.AppCompatActivity;
import androidx.core.app.ActivityCompat;
import androidx.core.app.NotificationCompat;
import androidx.core.app.NotificationManagerCompat;

import android.Manifest;
import android.app.AlarmManager;
import android.app.NotificationChannel;
import android.app.NotificationManager;
import android.app.PendingIntent;
import android.content.Context;
import android.content.Intent;
import android.content.pm.PackageManager;
import android.os.Build;
import android.os.Bundle;
import android.widget.ArrayAdapter;
import android.widget.ListView;
import android.widget.Toast;

import com.android.volley.Request;
import com.android.volley.RequestQueue;
import com.android.volley.Response;
import com.android.volley.VolleyError;
import com.android.volley.toolbox.JsonArrayRequest;
import com.android.volley.toolbox.Volley;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.Locale;

import com.jakewharton.threetenabp.AndroidThreeTen;

import org.threeten.bp.LocalTime;
import org.threeten.bp.format.DateTimeFormatter;

public class Student_schedule extends AppCompatActivity {

    private static final String TAG = Student_schedule.class.getSimpleName();
    private ListView listViewSchedule;
    private ArrayAdapter<String> adapter;

    // Notification channel constants
    private static final String CHANNEL_ID = "schedule_notification_channel";
    private static final String CHANNEL_NAME = "Schedule Notifications";
    private static final int NOTIFICATION_ID = 1;

    private AlarmManager alarmManager;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);

        // Initialize the ThreeTenABP library
        AndroidThreeTen.init(this);

        setContentView(R.layout.activity_student_schedule);

        listViewSchedule = findViewById(R.id.listViewScheduleStudent);
        adapter = new ArrayAdapter<>(this, android.R.layout.simple_list_item_1);
        listViewSchedule.setAdapter(adapter);
        alarmManager = (AlarmManager) getSystemService(Context.ALARM_SERVICE);

        Intent intent = getIntent();
        String section = intent.getStringExtra("sectionStudent");
        String fullname = intent.getStringExtra("fullnameStudent");
        String studentRemarks = intent.getStringExtra("remarks");



        String apiUrl = "https://ucc-csd-bscs.com/UCCP//studentsched.php";

        JsonArrayRequest request = new JsonArrayRequest(Request.Method.GET, apiUrl, null,
                new Response.Listener<JSONArray>() {
                    @Override
                    public void onResponse(JSONArray response) {
                        try {
                            // Clear the adapter to avoid duplicate data
                            adapter.clear();

                            boolean isIrregular = false;
                            // Iterate through the JSON array to find matching rows
                            for (int i = 0; i < response.length(); i++) {
                                JSONObject jsonObject = response.getJSONObject(i);
                                String remarks = jsonObject.getString("remarks");

                                if (remarks.equals(studentRemarks)) {
                                    String studentName = jsonObject.getString("name");

                                    // Check if the student name matches
                                    if (studentName.equals(fullname)) {
                                        isIrregular = true;

                                        String subjectCode = jsonObject.getString("subjectCode");
                                        String subjectName = jsonObject.getString("subjectName");
                                        String units = jsonObject.getString("units");
                                        String day = jsonObject.getString("day");
                                        String startTime = jsonObject.getString("startTime");
                                        String endTime = jsonObject.getString("endTime");
                                        String professor = jsonObject.getString("professor");

                                        // Create a string with the schedule information
                                        String scheduleInfo = "Subject Code: " + subjectCode + "\n"
                                                + "Subject Name: " + subjectName + "\n"
                                                + "Units: " + units + "\n"
                                                + "Day: " + day + "\n"
                                                + "Start Time: " + startTime + "\n"
                                                + "End Time: " + endTime + "\n"
                                                + "Professor: " + professor + "\n";

                                        // Add the schedule information to the adapter
                                        adapter.add(scheduleInfo);
                                    }
                                }
                            }


                            if (!isIrregular) {
                                for (int i = 0; i < response.length(); i++) {
                                    JSONObject jsonObject = response.getJSONObject(i);
                                    String sections = jsonObject.getString("courseyearsection");

                                    // Check if the section matches
                                    if (sections.equals(section)) {
                                        String subjectCode = jsonObject.getString("subjectCode");
                                        String subjectName = jsonObject.getString("subjectName");
                                        String units = jsonObject.getString("units");
                                        String day = jsonObject.getString("day");
                                        String startTime = jsonObject.getString("startTime");
                                        String endTime = jsonObject.getString("endTime");
                                        String professor = jsonObject.getString("professor");

                                        // Create a string with the schedule information
                                        String scheduleInfo = "Subject Code: " + subjectCode + "\n"
                                                + "Subject Name: " + subjectName + "\n"
                                                + "Units: " + units + "\n"
                                                + "Day: " + day + "\n"
                                                + "Start Time: " + startTime + "\n"
                                                + "End Time: " + endTime + "\n"
                                                + "Professor: " + professor + "\n";

                                        // Add the schedule information to the adapter
                                        adapter.add(scheduleInfo);
                                    }
                                }
                            }



                            if (adapter.isEmpty()) {
                                // Handle case when no match is found
                                adapter.add("No schedule found.");
                            }
                        } catch (JSONException e) {
                            e.printStackTrace();
                        }
                    }
                },
                new Response.ErrorListener() {
                    @Override
                    public void onErrorResponse(VolleyError error) {
                        error.printStackTrace();
                    }
                });

        RequestQueue queue = Volley.newRequestQueue(this);
        queue.add(request);
    }

    // Method to show a notification
//    private void scheduleNotification(String subjectCode, String startTime) {
//        Intent notificationIntent = new Intent(this, NotificationReceiver.class);
//        notificationIntent.putExtra("subjectCode", subjectCode);
//
//        PendingIntent pendingIntent = PendingIntent.getBroadcast(
//                this,
//                0,
//                notificationIntent,
//                PendingIntent.FLAG_UPDATE_CURRENT
//        );
//
//        SimpleDateFormat format = new SimpleDateFormat("HH:mm", Locale.getDefault());
//        Date startTimeDate;
//
//        try {
//            startTimeDate = format.parse(startTime);
//            long startTimeMillis = startTimeDate.getTime();
//
//            alarmManager.set(AlarmManager.RTC_WAKEUP, startTimeMillis, pendingIntent);
//        } catch (ParseException e) {
//            e.printStackTrace();
//        }
//    }
}
